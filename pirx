#!/bin/bash

#author: kamil wilas
#hpage: wilas.pl
#src: github.com/wilas/pirx

pirx_prefix="temp_pirx_prefix"
cmd="ls"
filtr=".jpg|.JPG|.jpeg|.JPEG|.png|.PNG|.mp3|.awk|.mobi"
# default number of digits - help keep sorted files in directory
dignumber=5
pattern=""

usage(){
    echo "Usage: $0 [OPTION] newBasename"
    echo "Change name of all selected files in current dir to newBasename{RecordNumber}.[current_ext|set_output_ext]"
    echo "Defaults file filtr: .jpg|.JPG|.jpeg|.JPEG|.png|.PNG|.mp3|.awk|.mobi"
    echo "Sort entries alphabetically if not -t."
    echo ""
    echo "Mandatory arguments to long options are mandatory for short options too."
    echo "Ordering options:"
    echo "-t                            sort by modification time"
    echo "-o [set_output_ext]           set output file extension (added also to extra input filtr)"
    echo "-i [input_filtr_ext]          set extra input filtr, e.g: MP3 or more complex MP3|.avi|.AVI"
    echo "-d [dignumber]                set number of digits in output record number, default=5 -> basename00001.jpg basename00110.jpg etc."
    echo "-b [replace_mark]             replace space with replace_mark, not change filename, e.g: one two012.jpg -> one_two012.jpg"
    echo "-p [pattern]                  change only file match pattern"
    echo "-v,  --verbose                explain what is being done"
    echo "-s,  --simulation             no change will be made (save mode)"
    echo "-h,  --help                   display this help and exit"
    echo ""
    echo "example: $0 -v roadtrip"
}

move(){
    n=0
    prefix=$1; shift
    for file in `eval $cmd | grep -E "$filtr" | grep -E "$pattern"`; do

        # Record number
        n=`expr $n + 1`
        num=`printf "%0${dignumber}d" $n` 
        
        # Help create new filename with proper extension
        if [ $blank ] ; then
            dest_file="$(echo $file | tr ' ' $blank)"
            [ -e $dest_file ] && continue
        elif [ $extension ] ; then
            dest_file="$(echo $prefix$@${num}.${extension})"
        else
            dest_file="$(echo $prefix$@${num}.${file##*.})"
        fi

        if [ ! $SIMULATION ] ; then
            # Check that file already exist - if yes, not overwrite it !!!
            if [ -e $dest_file ] ; then
                echo "$dest_file exist - not overwrite!"
                echo "Exit..."
                exit 1
            else
                # Fire !!!
                mv "$file" "$dest_file"
            fi
        fi
        
        # Mirror mirror tell me true - show time
        if [ $VERBOSE ] || [ $SIMULATION ] ; then
            echo "$file -> $dest_file"
        fi
    done
}

# Option parse
OPTS=`getopt -o hvsto:i:p:d:b: --long verbose,help -- "$@"`
if [ $? != 0 ] ; then echo "Terminating..." >&2 ; exit 1 ; fi
eval set -- "$OPTS"

while true ; do
    case "$1" in
        -h | --help ) usage; exit ;;
        -v | --verbose ) VERBOSE=true; shift;;
        -s | --simulation ) SIMULATION=true; shift;;
        -t ) cmd="ls -rt"; shift;;
        -o ) extension=$2; filtr="$filtr|.$2"; shift 2;;
        -i ) filtr="$filtr|.$2"; shift 2;;
        -p ) pattern="$2"; shift 2;;
        -d ) dignumber="$2"; shift 2;;
        -b ) blank="$2"; shift 2;;
        ? ) exit ;;
        -- ) shift; break ;;
    esac
done

# Iterating over some filenames with whitespaces in them make some problem.
# To fix: use $IFS variable to determine what the field separators are.
SAVEIFS=$IFS
IFS=$(echo -en "\n\b")

# If blank then not change filename to temporary, because record_number not change
if [ ! $blank ] ; then
    # Create temporary filename - To not overwrite existing files with same basename,
    # often only record_number is changed
    move $pirx_prefix $@
    pattern=$pirx_prefix
fi
# Right filename change
move "" $@

IFS=$SAVEIFS
